// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.0
// source: proto/dm.proto

package dm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{0}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{1}
}

type ManResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ManResp) Reset() {
	*x = ManResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManResp) ProtoMessage() {}

func (x *ManResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManResp.ProtoReflect.Descriptor instead.
func (*ManResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{2}
}

func (x *ManResp) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

//
//下面是设备管理模块的消息
type LoginAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`       //用户名
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`       //密码
	ClientID    string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`       //clientID
	Ip          string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                   //访问的ip地址
	Certificate []byte `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"` //客户端证书
}

func (x *LoginAuthReq) Reset() {
	*x = LoginAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAuthReq) ProtoMessage() {}

func (x *LoginAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAuthReq.ProtoReflect.Descriptor instead.
func (*LoginAuthReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{3}
}

func (x *LoginAuthReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginAuthReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginAuthReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *LoginAuthReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginAuthReq) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type AccessAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //用户名
	Topic    string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`       //主题
	ClientID string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"` //clientID
	Access   string `protobuf:"bytes,4,opt,name=access,proto3" json:"access,omitempty"`     //操作
	Ip       string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`             //访问的ip地址
}

func (x *AccessAuthReq) Reset() {
	*x = AccessAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessAuthReq) ProtoMessage() {}

func (x *AccessAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessAuthReq.ProtoReflect.Descriptor instead.
func (*AccessAuthReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{4}
}

func (x *AccessAuthReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccessAuthReq) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *AccessAuthReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *AccessAuthReq) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *AccessAuthReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type RootCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`       //用户名
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`       //密码
	ClientID    string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`       //clientID
	Ip          string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                   //访问的ip地址
	Certificate []byte `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"` //客户端证书
}

func (x *RootCheckReq) Reset() {
	*x = RootCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootCheckReq) ProtoMessage() {}

func (x *RootCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootCheckReq.ProtoReflect.Descriptor instead.
func (*RootCheckReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{5}
}

func (x *RootCheckReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RootCheckReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RootCheckReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *RootCheckReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RootCheckReq) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type ManageFirmwareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt  int64         `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"`  //操作 0:新增 1:修改 2:删除
	Info *FirmwareInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` //设备信息
}

func (x *ManageFirmwareReq) Reset() {
	*x = ManageFirmwareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageFirmwareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageFirmwareReq) ProtoMessage() {}

func (x *ManageFirmwareReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageFirmwareReq.ProtoReflect.Descriptor instead.
func (*ManageFirmwareReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{6}
}

func (x *ManageFirmwareReq) GetOpt() int64 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *ManageFirmwareReq) GetInfo() *FirmwareInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type FirmwareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID   string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`     //产品ID 只读
	Version     string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`         //固件版本 只读 产品下唯一
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`               //固件名
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` //固件描述
	Dir         string `protobuf:"bytes,5,opt,name=dir,proto3" json:"dir,omitempty"`                 //固件标识,拿来下载文件 只读
	Size        int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`              //固件大小 只读
}

func (x *FirmwareInfo) Reset() {
	*x = FirmwareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirmwareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareInfo) ProtoMessage() {}

func (x *FirmwareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareInfo.ProtoReflect.Descriptor instead.
func (*FirmwareInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{7}
}

func (x *FirmwareInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *FirmwareInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FirmwareInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FirmwareInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FirmwareInfo) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *FirmwareInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetFirmwareInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id 如果不传获取所有固件
	Version   int64     `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`    //固件版本 如果不传,获取产品下或所有固件
	Page      *PageInfo `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`           //分页信息 只获取一个则不填
}

func (x *GetFirmwareInfoReq) Reset() {
	*x = GetFirmwareInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirmwareInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirmwareInfoReq) ProtoMessage() {}

func (x *GetFirmwareInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirmwareInfoReq.ProtoReflect.Descriptor instead.
func (*GetFirmwareInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{8}
}

func (x *GetFirmwareInfoReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GetFirmwareInfoReq) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetFirmwareInfoReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetFirmwareInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*FirmwareInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *GetFirmwareInfoResp) Reset() {
	*x = GetFirmwareInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirmwareInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirmwareInfoResp) ProtoMessage() {}

func (x *GetFirmwareInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirmwareInfoResp.ProtoReflect.Descriptor instead.
func (*GetFirmwareInfoResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{9}
}

func (x *GetFirmwareInfoResp) GetList() []*FirmwareInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetFirmwareInfoResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime  int64                   `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"`   //创建时间 只读
	ProductID    string                  `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`        //产品id 只读
	ProductName  string                  `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`    //产品名称
	AuthMode     int64                   `protobuf:"varint,4,opt,name=authMode,proto3" json:"authMode,omitempty"`         //认证方式:1:账密认证,2:秘钥认证
	DeviceType   int64                   `protobuf:"varint,5,opt,name=deviceType,proto3" json:"deviceType,omitempty"`     //设备类型:1:设备,2:网关,3:子设备
	CategoryID   int64                   `protobuf:"varint,6,opt,name=categoryID,proto3" json:"categoryID,omitempty"`     //产品品类
	NetType      int64                   `protobuf:"varint,7,opt,name=netType,proto3" json:"netType,omitempty"`           //通讯方式:1:其他,2:wi-fi,3:2G/3G/4G,4:5G,5:BLE,6:LoRaWAN
	DataProto    int64                   `protobuf:"varint,8,opt,name=dataProto,proto3" json:"dataProto,omitempty"`       //数据协议:1:自定义,2:数据模板
	AutoRegister int64                   `protobuf:"varint,9,opt,name=autoRegister,proto3" json:"autoRegister,omitempty"` //动态注册:1:关闭,2:打开,3:打开并自动创建设备
	Secret       string                  `protobuf:"bytes,10,opt,name=secret,proto3" json:"secret,omitempty"`             //动态注册产品秘钥 只读
	Description  *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`   //描述
	DevStatus    *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=devStatus,proto3" json:"devStatus,omitempty"`       // 产品状态
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{10}
}

func (x *ProductInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ProductInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductInfo) GetAuthMode() int64 {
	if x != nil {
		return x.AuthMode
	}
	return 0
}

func (x *ProductInfo) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ProductInfo) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *ProductInfo) GetNetType() int64 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *ProductInfo) GetDataProto() int64 {
	if x != nil {
		return x.DataProto
	}
	return 0
}

func (x *ProductInfo) GetAutoRegister() int64 {
	if x != nil {
		return x.AutoRegister
	}
	return 0
}

func (x *ProductInfo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ProductInfo) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ProductInfo) GetDevStatus() *wrapperspb.StringValue {
	if x != nil {
		return x.DevStatus
	}
	return nil
}

type ManageProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt  int64        `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"`  //操作 0:新增 1:修改 2:删除
	Info *ProductInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` //产品信息
}

func (x *ManageProductReq) Reset() {
	*x = ManageProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageProductReq) ProtoMessage() {}

func (x *ManageProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageProductReq.ProtoReflect.Descriptor instead.
func (*ManageProductReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{11}
}

func (x *ManageProductReq) GetOpt() int64 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *ManageProductReq) GetInfo() *ProductInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetProductInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id  如果为空返回所有产品的信息
	Page      *PageInfo `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`           //分页信息,只获取一个则不填
}

func (x *GetProductInfoReq) Reset() {
	*x = GetProductInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductInfoReq) ProtoMessage() {}

func (x *GetProductInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductInfoReq.ProtoReflect.Descriptor instead.
func (*GetProductInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{12}
}

func (x *GetProductInfoReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GetProductInfoReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetProductInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ProductInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //产品信息
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //拥有的总数(只有分页的时候会返回)
}

func (x *GetProductInfoResp) Reset() {
	*x = GetProductInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductInfoResp) ProtoMessage() {}

func (x *GetProductInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductInfoResp.ProtoReflect.Descriptor instead.
func (*GetProductInfoResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{13}
}

func (x *GetProductInfoResp) GetList() []*ProductInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetProductInfoResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ProductTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime int64  `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间 只读
	ProductID   string `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`      //产品id 只读
	Template    string `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`        //数据模板
}

func (x *ProductTemplate) Reset() {
	*x = ProductTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductTemplate) ProtoMessage() {}

func (x *ProductTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductTemplate.ProtoReflect.Descriptor instead.
func (*ProductTemplate) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{14}
}

func (x *ProductTemplate) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ProductTemplate) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductTemplate) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

//只能修改
type ManageProductTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ProductTemplate `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //产品信息
}

func (x *ManageProductTemplateReq) Reset() {
	*x = ManageProductTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageProductTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageProductTemplateReq) ProtoMessage() {}

func (x *ManageProductTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageProductTemplateReq.ProtoReflect.Descriptor instead.
func (*ManageProductTemplateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{15}
}

func (x *ManageProductTemplateReq) GetInfo() *ProductTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetProductTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id  如果为空返回所有产品的信息
}

func (x *GetProductTemplateReq) Reset() {
	*x = GetProductTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductTemplateReq) ProtoMessage() {}

func (x *GetProductTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductTemplateReq.ProtoReflect.Descriptor instead.
func (*GetProductTemplateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{16}
}

func (x *GetProductTemplateReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID   string                  `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`      //产品id 只读
	DeviceName  string                  `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`    //设备名称 读写
	CreatedTime int64                   `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间 只读
	Secret      string                  `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`            //设备秘钥 只读
	FirstLogin  int64                   `protobuf:"varint,6,opt,name=firstLogin,proto3" json:"firstLogin,omitempty"`   //激活时间 只读
	LastLogin   int64                   `protobuf:"varint,7,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`     //最后上线时间 只读
	IsOnline    int64                   `protobuf:"varint,8,opt,name=isOnline,proto3" json:"isOnline,omitempty"`       //在线状态 只读
	Version     *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`          // 固件版本  读写
	LogLevel    int64                   `protobuf:"varint,10,opt,name=logLevel,proto3" json:"logLevel,omitempty"`      // 日志级别:1)关闭 2)错误 3)告警 4)信息 5)调试  读写
	Cert        string                  `protobuf:"bytes,11,opt,name=cert,proto3" json:"cert,omitempty"`               // 设备证书  只读
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{17}
}

func (x *DeviceInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DeviceInfo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *DeviceInfo) GetFirstLogin() int64 {
	if x != nil {
		return x.FirstLogin
	}
	return 0
}

func (x *DeviceInfo) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *DeviceInfo) GetIsOnline() int64 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *DeviceInfo) GetVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeviceInfo) GetLogLevel() int64 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *DeviceInfo) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

type ManageDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt  int64       `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"`  //操作 0:新增 1:修改 2:删除
	Info *DeviceInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` //设备信息
}

func (x *ManageDeviceReq) Reset() {
	*x = ManageDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageDeviceReq) ProtoMessage() {}

func (x *ManageDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageDeviceReq.ProtoReflect.Descriptor instead.
func (*ManageDeviceReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{18}
}

func (x *ManageDeviceReq) GetOpt() int64 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *ManageDeviceReq) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDeviceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string    `protobuf:"bytes,1,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名 为空时获取产品id下的所有设备信息
	ProductID  string    `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	Page       *PageInfo `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`             //分页信息 只获取一个则不填
}

func (x *GetDeviceInfoReq) Reset() {
	*x = GetDeviceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfoReq) ProtoMessage() {}

func (x *GetDeviceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfoReq.ProtoReflect.Descriptor instead.
func (*GetDeviceInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{19}
}

func (x *GetDeviceInfoReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *GetDeviceInfoReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GetDeviceInfoReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetDeviceInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DeviceInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *GetDeviceInfoResp) Reset() {
	*x = GetDeviceInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfoResp) ProtoMessage() {}

func (x *GetDeviceInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfoResp.ProtoReflect.Descriptor instead.
func (*GetDeviceInfoResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{20}
}

func (x *GetDeviceInfoResp) GetList() []*DeviceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetDeviceInfoResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//获取对应日志信息
type GetDeviceDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method     string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`         //获取的类型   property 属性 event事件 action 请求
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名(必填)
	ProductID  string `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id (必填)
	DataID     string `protobuf:"bytes,4,opt,name=dataID,proto3" json:"dataID,omitempty"`         //获取的具体标识符的数据 如果不指定则获取所有属性数据,一个属性一条,如果没有获取到的不会返回值
	TimeStart  int64  `protobuf:"varint,5,opt,name=timeStart,proto3" json:"timeStart,omitempty"`  //获取时间的开始
	TimeEnd    int64  `protobuf:"varint,6,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`      //时间的结束
	Limit      int64  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`          //获取的长度
}

func (x *GetDeviceDataReq) Reset() {
	*x = GetDeviceDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDataReq) ProtoMessage() {}

func (x *GetDeviceDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDataReq.ProtoReflect.Descriptor instead.
func (*GetDeviceDataReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{21}
}

func (x *GetDeviceDataReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GetDeviceDataReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *GetDeviceDataReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GetDeviceDataReq) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *GetDeviceDataReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *GetDeviceDataReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *GetDeviceDataReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

//设备的日志数据
type DeviceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //发生时间戳
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`            //类型 事件类型: 信息:info  告警alert  故障:fault
	DataID    string `protobuf:"bytes,3,opt,name=dataID,proto3" json:"dataID,omitempty"`        //属性id
	GetValue  string `protobuf:"bytes,4,opt,name=getValue,proto3" json:"getValue,omitempty"`    //获取到的值
	SendValue string `protobuf:"bytes,5,opt,name=sendValue,proto3" json:"sendValue,omitempty"`  //发送过去的参数(action限定)
}

func (x *DeviceData) Reset() {
	*x = DeviceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceData) ProtoMessage() {}

func (x *DeviceData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceData.ProtoReflect.Descriptor instead.
func (*DeviceData) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{22}
}

func (x *DeviceData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DeviceData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceData) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *DeviceData) GetGetValue() string {
	if x != nil {
		return x.GetValue
	}
	return ""
}

func (x *DeviceData) GetSendValue() string {
	if x != nil {
		return x.SendValue
	}
	return ""
}

//获取对应日志信息
type GetDeviceDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*DeviceData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetDeviceDataResp) Reset() {
	*x = GetDeviceDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDataResp) ProtoMessage() {}

func (x *GetDeviceDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDataResp.ProtoReflect.Descriptor instead.
func (*GetDeviceDataResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{23}
}

func (x *GetDeviceDataResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetDeviceDataResp) GetList() []*DeviceData {
	if x != nil {
		return x.List
	}
	return nil
}

//设备的日志数据
type DeviceDescribeLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`   //发生时间戳
	Action     string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`          //操作类型;显示相应的操作名称、API名称、服务的method
	RequestID  string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`    //请求ID
	TranceID   string `protobuf:"bytes,4,opt,name=tranceID,proto3" json:"tranceID,omitempty"`      //服务器端事务id
	Topic      string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`            //主题
	Content    string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`        //具体内容
	ResultType int64  `protobuf:"varint,7,opt,name=resultType,proto3" json:"resultType,omitempty"` //请求结果状态
}

func (x *DeviceDescribeLog) Reset() {
	*x = DeviceDescribeLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceDescribeLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDescribeLog) ProtoMessage() {}

func (x *DeviceDescribeLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDescribeLog.ProtoReflect.Descriptor instead.
func (*DeviceDescribeLog) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{24}
}

func (x *DeviceDescribeLog) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DeviceDescribeLog) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DeviceDescribeLog) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *DeviceDescribeLog) GetTranceID() string {
	if x != nil {
		return x.TranceID
	}
	return ""
}

func (x *DeviceDescribeLog) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *DeviceDescribeLog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DeviceDescribeLog) GetResultType() int64 {
	if x != nil {
		return x.ResultType
	}
	return 0
}

//实时获取对应信息
type GetDeviceDescribeLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名
	TimeStart  int64  `protobuf:"varint,3,opt,name=timeStart,proto3" json:"timeStart,omitempty"`  //获取时间的开始
	TimeEnd    int64  `protobuf:"varint,4,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`      //时间的结束
	Limit      int64  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`          //获取的长度
}

func (x *GetDeviceDescribeLogReq) Reset() {
	*x = GetDeviceDescribeLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDescribeLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDescribeLogReq) ProtoMessage() {}

func (x *GetDeviceDescribeLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDescribeLogReq.ProtoReflect.Descriptor instead.
func (*GetDeviceDescribeLogReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{25}
}

func (x *GetDeviceDescribeLogReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GetDeviceDescribeLogReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *GetDeviceDescribeLogReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *GetDeviceDescribeLogReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *GetDeviceDescribeLogReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

//实时获取对应信息
type GetDeviceDescribeLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DeviceDescribeLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetDeviceDescribeLogResp) Reset() {
	*x = GetDeviceDescribeLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDescribeLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDescribeLogResp) ProtoMessage() {}

func (x *GetDeviceDescribeLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDescribeLogResp.ProtoReflect.Descriptor instead.
func (*GetDeviceDescribeLogResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{26}
}

func (x *GetDeviceDescribeLogResp) GetList() []*DeviceDescribeLog {
	if x != nil {
		return x.List
	}
	return nil
}

type SendActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID   string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`     //产品id 获取产品id下的所有设备信息
	DeviceName  string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`   //设备名
	ActionId    string `protobuf:"bytes,3,opt,name=actionId,proto3" json:"actionId,omitempty"`       //产品数据模板中行为功能的标识符，由开发者自行根据设备的应用场景定义
	InputParams string `protobuf:"bytes,4,opt,name=inputParams,proto3" json:"inputParams,omitempty"` //输入参数
}

func (x *SendActionReq) Reset() {
	*x = SendActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendActionReq) ProtoMessage() {}

func (x *SendActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendActionReq.ProtoReflect.Descriptor instead.
func (*SendActionReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{27}
}

func (x *SendActionReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SendActionReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SendActionReq) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *SendActionReq) GetInputParams() string {
	if x != nil {
		return x.InputParams
	}
	return ""
}

type SendActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken  string `protobuf:"bytes,1,opt,name=clientToken,proto3" json:"clientToken,omitempty"`   //调用id
	OutputParams string `protobuf:"bytes,2,opt,name=outputParams,proto3" json:"outputParams,omitempty"` //输出参数 注意：此字段可能返回 null，表示取不到有效值。
	Status       string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`             //返回状态
	Code         int64  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`                //设备返回状态码
}

func (x *SendActionResp) Reset() {
	*x = SendActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendActionResp) ProtoMessage() {}

func (x *SendActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendActionResp.ProtoReflect.Descriptor instead.
func (*SendActionResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{28}
}

func (x *SendActionResp) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *SendActionResp) GetOutputParams() string {
	if x != nil {
		return x.OutputParams
	}
	return ""
}

func (x *SendActionResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendActionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SendPropertyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID     string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`          //产品id 获取产品id下的所有设备信息
	DeviceName    string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`        //设备名
	Data          string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                    //属性数据, JSON格式字符串, 注意字段需要在物模型属性里定义
	DataTimestamp int64  `protobuf:"varint,4,opt,name=dataTimestamp,proto3" json:"dataTimestamp,omitempty"` //上报数据UNIX时间戳, 仅对Method:reported有效
	Method        string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`                //请求类型 , 不填该参数或者 desired 表示下发属性给设备, reported 表示模拟设备上报属性
}

func (x *SendPropertyReq) Reset() {
	*x = SendPropertyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPropertyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPropertyReq) ProtoMessage() {}

func (x *SendPropertyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPropertyReq.ProtoReflect.Descriptor instead.
func (*SendPropertyReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{29}
}

func (x *SendPropertyReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SendPropertyReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SendPropertyReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SendPropertyReq) GetDataTimestamp() int64 {
	if x != nil {
		return x.DataTimestamp
	}
	return 0
}

func (x *SendPropertyReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type SendPropertyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`              //设备返回状态码
	Status      string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`           //返回状态
	ClientToken string `protobuf:"bytes,3,opt,name=clientToken,proto3" json:"clientToken,omitempty"` //调用id
	Data        string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`               //返回信息
}

func (x *SendPropertyResp) Reset() {
	*x = SendPropertyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPropertyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPropertyResp) ProtoMessage() {}

func (x *SendPropertyResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPropertyResp.ProtoReflect.Descriptor instead.
func (*SendPropertyResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{30}
}

func (x *SendPropertyResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendPropertyResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendPropertyResp) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *SendPropertyResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//获取sdk调试日志信息
type GetDeviceSDKLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string    `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名
	TimeStart  int64     `protobuf:"varint,3,opt,name=timeStart,proto3" json:"timeStart,omitempty"`  //获取时间的开始
	TimeEnd    int64     `protobuf:"varint,4,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`      //时间的结束
	Limit      int64     `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`          //获取的长度
	Page       *PageInfo `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`             //分页信息 只获取一个则不填
}

func (x *GetDeviceSDKLogReq) Reset() {
	*x = GetDeviceSDKLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceSDKLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceSDKLogReq) ProtoMessage() {}

func (x *GetDeviceSDKLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceSDKLogReq.ProtoReflect.Descriptor instead.
func (*GetDeviceSDKLogReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{31}
}

func (x *GetDeviceSDKLogReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GetDeviceSDKLogReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *GetDeviceSDKLogReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *GetDeviceSDKLogReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *GetDeviceSDKLogReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetDeviceSDKLogReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

//sdk调试日志信息
type GetDeviceSDKLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DeviceSDKLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetDeviceSDKLogResp) Reset() {
	*x = GetDeviceSDKLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceSDKLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceSDKLogResp) ProtoMessage() {}

func (x *GetDeviceSDKLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceSDKLogResp.ProtoReflect.Descriptor instead.
func (*GetDeviceSDKLogResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{32}
}

func (x *GetDeviceSDKLogResp) GetList() []*DeviceSDKLog {
	if x != nil {
		return x.List
	}
	return nil
}

type DeviceSDKLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //发生时间戳
	Loglevel  int64  `protobuf:"varint,2,opt,name=loglevel,proto3" json:"loglevel,omitempty"`   //操作类型;显示相应的操作名称、API名称、服务的method
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`      //具体内容
}

func (x *DeviceSDKLog) Reset() {
	*x = DeviceSDKLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceSDKLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSDKLog) ProtoMessage() {}

func (x *DeviceSDKLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceSDKLog.ProtoReflect.Descriptor instead.
func (*DeviceSDKLog) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{33}
}

func (x *DeviceSDKLog) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DeviceSDKLog) GetLoglevel() int64 {
	if x != nil {
		return x.Loglevel
	}
	return 0
}

func (x *DeviceSDKLog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_proto_dm_proto protoreflect.FileDescriptor

var file_proto_dm_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x64, 0x6d, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x07,
	0x4d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x85,
	0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x4b, 0x0a,
	0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6f, 0x70, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x6e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xbb, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x64, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x49, 0x0a, 0x10, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64,
	0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x6d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x22, 0x43, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6d, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0xc6, 0x02, 0x0a,
	0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x36, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x65, 0x72, 0x74, 0x22, 0x47, 0x0a, 0x0f, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x72,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa1, 0x01, 0x0a,
	0x0f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x22, 0x74, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x44, 0x4b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x44, 0x4b, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x44, 0x4b, 0x4c,
	0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x44, 0x4b, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xcf, 0x07, 0x0a,
	0x02, 0x44, 0x6d, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x11,
	0x2e, 0x64, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x10, 0x2e, 0x64,
	0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0c,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x64,
	0x6d, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x14, 0x2e, 0x64, 0x6d, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0e, 0x67, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x64, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x15, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x64, 0x6d, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x64,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0d,
	0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e,
	0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x15, 0x2e, 0x64,
	0x6d, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x67, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x6f,
	0x67, 0x12, 0x1b, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d,
	0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x2e,
	0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x73, 0x65,
	0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x64, 0x6d, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x64, 0x6d,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12,
	0x13, 0x2e, 0x64, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x64, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x67, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x44, 0x4b, 0x4c, 0x6f, 0x67, 0x12, 0x16, 0x2e,
	0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x44, 0x4b, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x44, 0x4b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x42, 0x07,
	0x5a, 0x05, 0x70, 0x62, 0x2f, 0x64, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dm_proto_rawDescOnce sync.Once
	file_proto_dm_proto_rawDescData = file_proto_dm_proto_rawDesc
)

func file_proto_dm_proto_rawDescGZIP() []byte {
	file_proto_dm_proto_rawDescOnce.Do(func() {
		file_proto_dm_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dm_proto_rawDescData)
	})
	return file_proto_dm_proto_rawDescData
}

var file_proto_dm_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_proto_dm_proto_goTypes = []interface{}{
	(*PageInfo)(nil),                 // 0: dm.PageInfo
	(*Response)(nil),                 // 1: dm.Response
	(*ManResp)(nil),                  // 2: dm.ManResp
	(*LoginAuthReq)(nil),             // 3: dm.LoginAuthReq
	(*AccessAuthReq)(nil),            // 4: dm.AccessAuthReq
	(*RootCheckReq)(nil),             // 5: dm.RootCheckReq
	(*ManageFirmwareReq)(nil),        // 6: dm.ManageFirmwareReq
	(*FirmwareInfo)(nil),             // 7: dm.FirmwareInfo
	(*GetFirmwareInfoReq)(nil),       // 8: dm.GetFirmwareInfoReq
	(*GetFirmwareInfoResp)(nil),      // 9: dm.GetFirmwareInfoResp
	(*ProductInfo)(nil),              // 10: dm.ProductInfo
	(*ManageProductReq)(nil),         // 11: dm.ManageProductReq
	(*GetProductInfoReq)(nil),        // 12: dm.GetProductInfoReq
	(*GetProductInfoResp)(nil),       // 13: dm.GetProductInfoResp
	(*ProductTemplate)(nil),          // 14: dm.ProductTemplate
	(*ManageProductTemplateReq)(nil), // 15: dm.ManageProductTemplateReq
	(*GetProductTemplateReq)(nil),    // 16: dm.GetProductTemplateReq
	(*DeviceInfo)(nil),               // 17: dm.DeviceInfo
	(*ManageDeviceReq)(nil),          // 18: dm.ManageDeviceReq
	(*GetDeviceInfoReq)(nil),         // 19: dm.GetDeviceInfoReq
	(*GetDeviceInfoResp)(nil),        // 20: dm.GetDeviceInfoResp
	(*GetDeviceDataReq)(nil),         // 21: dm.GetDeviceDataReq
	(*DeviceData)(nil),               // 22: dm.DeviceData
	(*GetDeviceDataResp)(nil),        // 23: dm.GetDeviceDataResp
	(*DeviceDescribeLog)(nil),        // 24: dm.DeviceDescribeLog
	(*GetDeviceDescribeLogReq)(nil),  // 25: dm.GetDeviceDescribeLogReq
	(*GetDeviceDescribeLogResp)(nil), // 26: dm.GetDeviceDescribeLogResp
	(*SendActionReq)(nil),            // 27: dm.SendActionReq
	(*SendActionResp)(nil),           // 28: dm.SendActionResp
	(*SendPropertyReq)(nil),          // 29: dm.SendPropertyReq
	(*SendPropertyResp)(nil),         // 30: dm.SendPropertyResp
	(*GetDeviceSDKLogReq)(nil),       // 31: dm.GetDeviceSDKLogReq
	(*GetDeviceSDKLogResp)(nil),      // 32: dm.GetDeviceSDKLogResp
	(*DeviceSDKLog)(nil),             // 33: dm.DeviceSDKLog
	(*wrapperspb.StringValue)(nil),   // 34: google.protobuf.StringValue
}
var file_proto_dm_proto_depIdxs = []int32{
	7,  // 0: dm.ManageFirmwareReq.info:type_name -> dm.FirmwareInfo
	0,  // 1: dm.GetFirmwareInfoReq.page:type_name -> dm.PageInfo
	7,  // 2: dm.GetFirmwareInfoResp.list:type_name -> dm.FirmwareInfo
	34, // 3: dm.ProductInfo.description:type_name -> google.protobuf.StringValue
	34, // 4: dm.ProductInfo.devStatus:type_name -> google.protobuf.StringValue
	10, // 5: dm.ManageProductReq.info:type_name -> dm.ProductInfo
	0,  // 6: dm.GetProductInfoReq.page:type_name -> dm.PageInfo
	10, // 7: dm.GetProductInfoResp.list:type_name -> dm.ProductInfo
	14, // 8: dm.ManageProductTemplateReq.info:type_name -> dm.ProductTemplate
	34, // 9: dm.DeviceInfo.version:type_name -> google.protobuf.StringValue
	17, // 10: dm.ManageDeviceReq.info:type_name -> dm.DeviceInfo
	0,  // 11: dm.GetDeviceInfoReq.page:type_name -> dm.PageInfo
	17, // 12: dm.GetDeviceInfoResp.list:type_name -> dm.DeviceInfo
	22, // 13: dm.GetDeviceDataResp.list:type_name -> dm.DeviceData
	24, // 14: dm.GetDeviceDescribeLogResp.list:type_name -> dm.DeviceDescribeLog
	0,  // 15: dm.GetDeviceSDKLogReq.page:type_name -> dm.PageInfo
	33, // 16: dm.GetDeviceSDKLogResp.list:type_name -> dm.DeviceSDKLog
	3,  // 17: dm.Dm.loginAuth:input_type -> dm.LoginAuthReq
	4,  // 18: dm.Dm.accessAuth:input_type -> dm.AccessAuthReq
	5,  // 19: dm.Dm.rootCheck:input_type -> dm.RootCheckReq
	18, // 20: dm.Dm.manageDevice:input_type -> dm.ManageDeviceReq
	11, // 21: dm.Dm.manageProduct:input_type -> dm.ManageProductReq
	12, // 22: dm.Dm.getProductInfo:input_type -> dm.GetProductInfoReq
	15, // 23: dm.Dm.manageProductTemplate:input_type -> dm.ManageProductTemplateReq
	16, // 24: dm.Dm.getProductTemplate:input_type -> dm.GetProductTemplateReq
	19, // 25: dm.Dm.getDeviceInfo:input_type -> dm.GetDeviceInfoReq
	6,  // 26: dm.Dm.manageFirmware:input_type -> dm.ManageFirmwareReq
	8,  // 27: dm.Dm.GetFirmwareInfo:input_type -> dm.GetFirmwareInfoReq
	25, // 28: dm.Dm.getDeviceDescribeLog:input_type -> dm.GetDeviceDescribeLogReq
	21, // 29: dm.Dm.getDeviceData:input_type -> dm.GetDeviceDataReq
	27, // 30: dm.Dm.sendAction:input_type -> dm.SendActionReq
	29, // 31: dm.Dm.sendProperty:input_type -> dm.SendPropertyReq
	31, // 32: dm.Dm.getDeviceSDKLog:input_type -> dm.GetDeviceSDKLogReq
	1,  // 33: dm.Dm.loginAuth:output_type -> dm.Response
	1,  // 34: dm.Dm.accessAuth:output_type -> dm.Response
	1,  // 35: dm.Dm.rootCheck:output_type -> dm.Response
	17, // 36: dm.Dm.manageDevice:output_type -> dm.DeviceInfo
	10, // 37: dm.Dm.manageProduct:output_type -> dm.ProductInfo
	13, // 38: dm.Dm.getProductInfo:output_type -> dm.GetProductInfoResp
	14, // 39: dm.Dm.manageProductTemplate:output_type -> dm.ProductTemplate
	14, // 40: dm.Dm.getProductTemplate:output_type -> dm.ProductTemplate
	20, // 41: dm.Dm.getDeviceInfo:output_type -> dm.GetDeviceInfoResp
	7,  // 42: dm.Dm.manageFirmware:output_type -> dm.FirmwareInfo
	9,  // 43: dm.Dm.GetFirmwareInfo:output_type -> dm.GetFirmwareInfoResp
	26, // 44: dm.Dm.getDeviceDescribeLog:output_type -> dm.GetDeviceDescribeLogResp
	23, // 45: dm.Dm.getDeviceData:output_type -> dm.GetDeviceDataResp
	28, // 46: dm.Dm.sendAction:output_type -> dm.SendActionResp
	30, // 47: dm.Dm.sendProperty:output_type -> dm.SendPropertyResp
	32, // 48: dm.Dm.getDeviceSDKLog:output_type -> dm.GetDeviceSDKLogResp
	33, // [33:49] is the sub-list for method output_type
	17, // [17:33] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_dm_proto_init() }
func file_proto_dm_proto_init() {
	if File_proto_dm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageFirmwareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirmwareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirmwareInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirmwareInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageProductTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceDescribeLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDescribeLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDescribeLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendActionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPropertyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPropertyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceSDKLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceSDKLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceSDKLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dm_proto_goTypes,
		DependencyIndexes: file_proto_dm_proto_depIdxs,
		MessageInfos:      file_proto_dm_proto_msgTypes,
	}.Build()
	File_proto_dm_proto = out.File
	file_proto_dm_proto_rawDesc = nil
	file_proto_dm_proto_goTypes = nil
	file_proto_dm_proto_depIdxs = nil
}
